version: '3'
services:
  n8n:
    # image: docker.n8n.io/n8nio/n8n
    # use local image
    build: .
    ports:
      - 5678:5678

    restart: always
    env_file:
      - .env-n8n
    environment:
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_DATABASE=n8n
      - DB_POSTGRESDB_HOST=pg-n8n
      - DB_POSTGRESDB_PORT=5432
      - N8N_LOG_LEVEL=debug
      - N8N_METRICS=true

      # .env stuff
      # - DB_POSTGRESDB_USER=<POSTGRES_USER>
      # - DB_POSTGRESDB_PASSWORD=<POSTGRES_PASSWORD>

      # teaser ;)
      # - N8N_CUSTOM_EXTENSIONS=/home/node/.n8n/custom_nodes
    volumes:
      - .:/home/node
      # teaser ;)
      # - ./custom_nodes:/home/node/.n8n/custom

      # stuff you want accessable from the host
      - ./mount_files:/mount_files

    # start with custom script (also part of the teaser ;) )
    # entrypoint: ["/bin/sh", "-c", "/home/node/scripts/n8n-startup.sh"]
    # run as user node
    # user: node

  pg-n8n:
    image: postgres:12
    restart: always
    env_file:
      - .env-pg-n8n
    environment:
      POSTGRES_DB: n8n
      # .env stuff
      # POSTGRES_USER: <POSTGRES_USER>
      # POSTGRES_PASSWORD: <POSTGRES_PASSWORD>
    volumes:
    - pg_n8n_data:/var/lib/postgresql/data

  langfuse:
    image: langfuse/langfuse:2
    depends_on:
      pg-langfuse:
        condition: service_healthy
    ports:
      - "3001:3000"
    env_file:
      - .env-langfuse
    environment:
      - DATABASE_URL=postgresql://langfuse:password@pg-langfuse:5433/langfuse
      # - NEXTAUTH_SECRET=mysecret
      # - SALT=mysalt
      # - ENCRYPTION_KEY=0000000000000000000000000000000000000000000000000000000000000000 # generate via `openssl rand -hex 32`
      - NEXTAUTH_URL=http://localhost:3001
      - TELEMETRY_ENABLED=${TELEMETRY_ENABLED:-true}
      - LANGFUSE_ENABLE_EXPERIMENTAL_FEATURES=${LANGFUSE_ENABLE_EXPERIMENTAL_FEATURES:-true}

  pg-langfuse:
    image: postgres
    restart: always
    command: postgres -p 5433
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U langfuse -p 5433"]
      interval: 3s
      timeout: 3s
      retries: 10
    env_file:
      - .env-pg-langfuse
    environment:
      # .env stuff
      # - POSTGRES_USER=langfuse
      # - POSTGRES_PASSWORD=password
      - POSTGRES_DB=langfuse
    ports:
      - 5433:5433
    volumes:
      - pg_langfuse_data:/var/lib/postgresql/data

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - 9090:9090
    restart: unless-stopped
    volumes:
      - ./prometheus:/etc/prometheus
      - prom_data:/prometheus
  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - 3002:3000
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=grafana
    volumes:
      - ./grafana:/etc/grafana/provisioning/datasources

  qdrant:
    image: qdrant/qdrant:latest
    restart: always
    container_name: qdrant
    ports:
      - 6333:6333
      - 6334:6334
    expose:
      - 6333
      - 6334
      - 6335
    configs:
      - source: qdrant_config
        target: /qdrant/config/production.yaml
    volumes:
      - qdrant_data:/qdrant/storage

# system metrics exporter thingie
  node-exporter:
    image: prom/node-exporter
    container_name: node-exporter
    ports:
      - 9100:9100
    restart: unless-stopped

configs:
  qdrant_config:
    content: |
      log_level: INFO 
volumes:
  pg_n8n_data:
  prom_data:
  n8n_data:
  pg_langfuse_data:
  qdrant_data: